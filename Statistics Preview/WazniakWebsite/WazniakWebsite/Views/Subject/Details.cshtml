@model WazniakWebsite.Models.Subject
@using PagedList
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Details";
}

@section HeadScripts
{
    <script type="text/javascript" src="/Scripts/jquery-ui-1.10.4.custom.js"></script>

    <style>
        .radio {
            margin-top: 30px;
            margin-bottom: 30px;
        }

        #prompt {
            margin-top: 0;
            margin-bottom: 50px;
        }

        dt {
            color: #660066;
        }

        .LeftFloat {
            margin-left: 24px;
            float: left;
            position: relative;
            top: 50%;
            -webkit-transform: translateY(-50%);
            -moz-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
            -o-transform: translateY(-50%);
            transform: translateY(-50%);
        }

        .RightFloat {
            margin-right: 12px;
            float: right;
            position: relative;
            top: 50%;
            -webkit-transform: translateY(-50%);
            -moz-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
            -o-transform: translateY(-50%);
            transform: translateY(-50%);
        }

        .FieldContainer {
            background: -webkit-radial-gradient(#9900CC, #FFCCFF); /* Safari 5.1 to 6.0 */
            background: -o-radial-gradient(#9900CC, #FFCCFF); /* For Opera 11.6 to 12.0 */
            background: -moz-radial-gradient(#9900CC, #FFCCFF); /* For Firefox 3.6 to 15 */
            background: radial-gradient(#9900CC, #FFCCFF); /* Standard syntax */
            width: 400px;
            max-height: 300px;
            overflow-y: auto;
            font-family: tahoma;
            -ms-border-radius: 6px;
            border-radius: 6px;
            float: left;
            margin-right: 30px;
        }

        .OrderingField {
            margin: 5px;
            height: 30px;
            width: 355px;
            -ms-border-radius: 6px;
            border-radius: 6px;
            float: right;
        }

        .OrderNoField {
            margin: 5px;
            margin-right: 0;
            height: 30px;
            width: 30px;
            -ms-border-radius: 6px;
            border-radius: 6px;
            float: left;
            text-align: center;
            line-height: 30px;
        }

        .Up {
        }

        .Down {
        }

        .wrapperDiv {
            width: 100%;
            margin: 0 auto;
            padding: 0;
            overflow: auto;
        }

        .rightColumn {
            float: right;
            margin-top: 20px;
        }

        .leftColumn {
            float: left;
        }

    </style>

    <script type="text/javascript">
        function editTask(id, className) {
            window.location = '/' + className +'/Edit/' + id;
        }

        function deleteTask(id, className) {
            window.location = '/' + className + '/Delete/' + id;
        }

        function addNewTask(name, id) {
            if ($('input[name="optionsRadios"]:checked').val() == "option1") {
                window.location = '/RegularTask/Create/' + name + '/' + id;
            }
            else {
                window.location = '/MathematicalTask/Create/' + name + '/' + id;
            }
        }

        function goToTaskDetails(taskType, id) {
            if (taskType == "RegularTask") {
                window.location = '/RegularTask/Details/' + id;
            } else if (taskType == "MathematicalTask") {
                window.location = '/MathematicalTask/Details/' + id;
            }
        }

        $(function () {
            $("#tooltip1,#tooltip2,[id^='tooltipEdit']").tooltip({
                animated: 'fade',
                placement: 'bottom'
            });
            $("[id^='tooltipRemove']").tooltip({
                animated: 'fade',
                placement: 'top'
            });
            $("[id^='tooltipUp']").tooltip({
                animated: 'fade',
                placement: 'top'
            });
            $("[id^='tooltipDown']").tooltip({
                animated: 'fade',
                placement: 'top'
            });
        });
    </script>
    
    <script type="text/javascript">
        var isModuleSaveBtnVisible = 0;

        //<![CDATA[
        $(window).load(function () {
            function moveUp(item) {
                var prev = item.prev().prev();
                if (prev.length == 0)
                    return;
                prev.css('z-index', 999).css('position', 'relative').animate({ top: item.height() }, 250);
                item.css('z-index', 1000).css('position', 'relative').animate({ top: '-' + prev.height() }, 300, function () {
                    prev.css('z-index', '').css('top', '').css('position', '');
                    item.css('z-index', '').css('top', '').css('position', '');
                    item.insertBefore(prev);
                    prev.insertAfter(prev.next());
                });

                showSaveBtn();
            }
            function moveDown(item) {
                var next = item.next().next();
                if (next.length == 0)
                    return;
                next.css('z-index', 999).css('position', 'relative').animate({ top: '-' + item.height() }, 250);
                item.css('z-index', 1000).css('position', 'relative').animate({ top: next.height() }, 300, function () {
                    next.css('z-index', '').css('top', '').css('position', '');
                    item.css('z-index', '').css('top', '').css('position', '');
                    item.insertAfter(next);
                    next.insertBefore(next.prev());
                });

                showSaveBtn();
            }

            $(".FieldContainer").sortable({ items: ".OrderingField", distance: 10 });

            $('.Up').click(function () {
                moveUp($(this).parents('.OrderingField'));
            });

            $('.Down').click(function () {
                moveDown($(this).parents('.OrderingField'));
            });
        });//]]>

        $(function() {
            $("#moduleSaveBtn").hide();
            $("#moduleSaveBtn").attr('disabled', 'disabled');
        });
        
        function showSaveBtn() {
            if (isModuleSaveBtnVisible == 0) {
                isModuleSaveBtnVisible = 1;
                $("#moduleSaveBtn").show(500);
                $("#moduleSaveBtn").removeAttr('disabled');
            }
        }

    </script>

}

<div class="wrapperDiv">
    <h2 class="PurpleText leftColumn">Subject details</h2>

    <div class="rightColumn">
        <input type="button" value="New Exercise" class="btn-lg PurpleBtn" data-toggle="modal" data-target="#addExerciseModal" />
    </div>
</div>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dd><br/></dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
            
        <dd><br /></dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastUpdated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastUpdated)
        </dd>

        <dd><br /></dd>

        <dt>
            Modules
        </dt>

        <dd>
            <div class="FieldContainer">
                @{
                    var moduleList = (IList<WazniakWebsite.Models.Module>)ViewBag.ModuleList;
                    for (var i = 1; i <= moduleList.Count; ++i)
                    {
                        var module = moduleList[i - 1];
                    
                        <div class="OrderNoField lightPurpleBackground"><b>@i.</b></div>
                        <div class="OrderingField lightPurpleBackground">
                            <div class="LeftFloat">
                                <b>@Html.DisplayFor(modelItem => module.Title)</b>
                            </div>
                            <div class="RightFloat">
                                <span id="tooltipUp" class="glyphicon glyphicon-chevron-up PurpleColor Up clickable" title="Up"></span>
                                <span id="tooltipDown" class="glyphicon glyphicon-chevron-down PurpleColor Down clickable" title="Down"></span>
                            </div>
                        </div>
                    }    
                }
            </div>
            
            <input id="moduleSaveBtn" type="button" value="Save Changes" class="btn PurpleBtn"/>
        </dd>

        <dd><br /><br /></dd>

        <dt>
            Exercises
        </dt>

        <dd>
            <br/>
            <br />
            
            @using (Html.BeginForm())
            {
                <div class="form-inline">
                    <div class="form-group">
                        <label class="control-label PurpleText">Find exercise by title:</label>
                    </div>
                    <div class="form-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Search" class="btn PurpleBtn">
                    </div>
                </div>    
            }

            <br/>

            <table class="table table-hover">
                <tr class="PurpleText">
                    <th>
                        @Html.ActionLink("Exercise title", "Details", new { sortOrder = ViewBag.SortParam, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Solution Type
                    </th>
                    <th>
                        Solution Overview
                    </th>
                    <th></th>
                    <th></th>
                </tr>

                @foreach (var item in (IPagedList<WazniakWebsite.Models.Task>)ViewBag.Tasks)
                {
                    <tr>
                        <td class="clickable" onclick="goToTaskDetails('@item.className()', @item.ID)">
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td class="clickable" onclick="goToTaskDetails('@item.className()', @item.ID)">
                            @{
                                if (@item.Answer.className() == ViewBag.TextAnswer)
                                {
                                    @Html.Raw("Text")
                                }
                                else if (@item.Answer.className() == ViewBag.SingleValueAnswer)
                                {
                                    @Html.Raw("Single Value")
                                }
                                else if (@item.Answer.className() == ViewBag.SingleChoiceAnswer)
                                {
                                    @Html.Raw("Single Choice")
                                }
                                else if (@item.Answer.className() == ViewBag.MultipleChoiceAnswer)
                                {
                                    @Html.Raw("Multiple Choice")
                                }
                            }
                        </td>
                        <td class="clickable" onclick="goToTaskDetails('@item.className()', @item.ID)">
                            @{
                                if (item.Answer != null)
                                {
                                    @item.Answer.Overview()
                                }
                            }
                        </td>

                        <td>
                            <span id="tooltipEdit" class="glyphicon glyphicon-edit PurpleColor clickable" title="Edit" onclick="editTask('@item.ID', '@item.className()')"></span>
                        </td>
                        <td>
                            <span id="tooltipRemove" class="glyphicon glyphicon-trash PurpleColor clickable" title="Delete" onclick="deleteTask('@item.ID', '@item.className()')"></span>
                        </td>
                    </tr>                    
                }
            </table>
            
            Page @(ViewBag.Tasks.PageCount < ViewBag.Tasks.PageNumber ? 0 : ViewBag.Tasks.PageNumber) of @ViewBag.Tasks.PageCount

            @Html.PagedListPager((IPagedList)ViewBag.Tasks, page => Url.Action("Details", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </dd>
    </dl>
</div>

<hr />

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<!-- addExerciseModal -->
<div class="modal fade" id="addExerciseModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title PurpleText" id="myModalLabel">Choose the exercise that you want to create:</h3>
            </div>
            <div class="modal-body">
                <h5 class="PurpleText" id="prompt">Move the mouse over the exercise names, to see a short description.</h5>

                <div class="radio">
                    <label id="tooltip1" data-toggle="tooltip" title="Typical exercise which content is pure text.">
                        <input type="radio" name="optionsRadios" id="regularExerciseOption" value="option1" checked>
                        <h4 class="PurpleText">Regular Exercise</h4>
                    </label>
                </div>

                <div class="radio">
                    <label id="tooltip2" data-toggle="tooltip" title="Exercise that may include special signs, mathematical formulas, etc.">
                        <input type="radio" name="optionsRadios" id="mathematicalExerciseOption" value="option2">
                        <h4 class="PurpleText">Mathematical Exercise</h4>
                    </label>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Dismiss</button>
                <button type="button" class="btn PurpleBtn" id="createExerciseBtn" onclick="addNewTask('@Model.Name', '@Model.ID')">Create exercise</button>
            </div>
        </div>
    </div>
</div>
